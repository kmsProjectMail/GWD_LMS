<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<context:component-scan
base-package="com.min.edu"/>
<mvc:annotation-driven/>

<bean class ="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>classpath:properties/db.properties</value>
		</list>
	</property>
</bean>

<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
	<property name="driverClassName" value="${driver}"></property>
	<property name="url" value="${url}"></property>
	<property name="username" value="${username}"></property>
	<property name="password" value="${password}"></property>
</bean>

<bean id="sqlSessionFoctoryBean" class ="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
	<property name="configLocation" value="/WEB-INF/spring/sql/configuration.xml"></property>
</bean>

<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	<constructor-arg ref="sqlSessionFoctoryBean"></constructor-arg>
</bean>

<bean class ="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>


	<s:http >
        <s:intercept-url pattern="/**" access="permitAll" />
        <s:intercept-url pattern="/login/**" access="permitAll" />
<!--         <s:intercept-url pattern="/all/**" access="permitAll" /> -->
<!--         <s:intercept-url pattern="/guest/**" access="permitAll" /> -->
<!--         <s:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" /> -->
<!--         <s:intercept-url pattern="/member/**" access="hasRole('MEM')" /> -->
<!--         <s:intercept-url pattern="/academy/**" access="hasRole('ACA')" /> -->
<!--         <s:intercept-url pattern="/center/**" access="hasRole('CEN')" /> -->
<!--         <s:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" /> -->
        
        <s:form-login login-page="/login/loginForm.do"
                    default-target-url="/home.do"
                    authentication-failure-url="/login/loginForm.do?error"
                    username-parameter="id"
                    password-parameter="password" 
                    />
        <s:logout logout-url="/logout"
                logout-success-url="/home.do" />
                
           <s:logout logout-url="/logout" />
    
    <s:access-denied-handler error-page="/login/accessDenied.do"/>
    <s:csrf disabled="false"/>

    </s:http>
    

<bean id="jdbcDaoImpl" class ="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
	<property name="dataSource" ref="dataSource"/>
</bean>


<!-- <bean id ="userAuthProvider" class ="com.min.edu.commons.utils.CustomAuthenticationProvider"/> -->
<bean id="passwordEncoder" class ="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<bean id="serviceUserImpl" class ="com.min.edu.service.ServiceUserImpl"/>
<!-- Provider -->
<s:authentication-manager>
	<s:authentication-provider user-service-ref="serviceUserImpl"/>
<!-- 	<s:authentication-provider ref="userAuthProvider"/> -->
</s:authentication-manager>

<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
</bean>


</beans>
